name: Build and Deploy DataGateVPNBot main

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted
    name: Build and Deploy on Raspberry Pi
    env:
      ASPNETCORE_ENVIRONMENT: Release
      TARGETARCH: arm64
      BUILD_CONFIGURATION: Debug

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use existing configuration files
        run: |
          cp /home/rackot/configs/appsettings.json ./appsettings.json
          cp /home/rackot/configs/appsettings.Development.json ./appsettings.Development.json
          
          cp /home/rackot/certs/datagatetgbot.pem ./datagatetgbot.pem
          cp /home/rackot/certs/datagatetgbot.key ./datagatetgbot.key
          
          cp /home/rackot/Photo/bot.gif ./bot.gif

      - name: Verify files
        run: |
          echo "Verifying required files..."
          for file in appsettings.json appsettings.Development.json datagatetgbot.pem datagatetgbot.key bot.gif; do
            if [ -s ./$file ]; then
              echo "$file is present and not empty.";
            else
              echo "$file is missing or empty!";
              exit 1;
            fi
          done

      - name: Debug working directory
        run: |
          echo "Current working directory:"
          pwd
          echo "Listing files in current directory:"
          ls -la
          echo "Checking DataGateVPNBot folder:"
          ls -la DataGateVPNBot || echo "DataGateVPNBot folder not found"

      - name: Build Docker image for ARM
        run: |
          docker build --build-arg TARGETARCH=${TARGETARCH} --build-arg BUILD_CONFIGURATION=${BUILD_CONFIGURATION} -t datagatevpn-main -f Dockerfile .

      - name: Deploy Docker container
        run: |
          docker stop datagatevpn_main_container || true
          docker rm datagatevpn_main_container || true
          docker run -d --name datagatevpn_main_container \
          -p 88:88 \
          -e ASPNETCORE_ENVIRONMENT=Release \
          -v $PWD/appsettings.json:/app/appsettings.json \
          -v $PWD/appsettings.Development.json:/app/appsettings.Development.json \
          -v $PWD/datagatetgbot.pem:/app/datagatetgbot.pem \
          -v $PWD/datagatetgbot.key:/app/datagatetgbot.key \
          -v $PWD/bot.gif:/app/bot.gif \
          -v /etc/openvpn/easy-rsa:/etc/openvpn/easy-rsa \
          -v /etc/openvpn/clients:/etc/openvpn/clients \
          -v /etc/openvpn/crl.pem:/etc/openvpn/crl.pem \
          -v /var/log/openvpn-status.log:/var/log/openvpn-status.log \
          datagatevpn-main